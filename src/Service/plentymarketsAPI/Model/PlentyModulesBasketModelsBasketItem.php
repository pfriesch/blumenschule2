<?php
/**
 * PlentyModulesBasketModelsBasketItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * plentymarkets REST-API
 *
 * The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.8
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * PlentyModulesBasketModelsBasketItem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PlentyModulesBasketModelsBasketItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Plenty\Modules\Basket\Models\BasketItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
'basket_id' => 'int',
'session_id' => 'string',
'order_row_id' => 'int',
'quantity' => 'BigDecimal',
'quantity_originally' => 'BigDecimal',
'item_id' => 'int',
'price_id' => 'int',
'attribute_value_set_id' => 'int',
'rebate' => 'int',
'vat' => 'BigDecimal',
'price' => 'BigDecimal',
'given_price' => 'BigDecimal',
'use_given_price' => 'bool',
'input_width' => 'int',
'input_length' => 'int',
'input_height' => 'int',
'item_type' => 'int',
'external_item_id' => 'string',
'no_edit_by_customer' => 'bool',
'cost_center_id' => 'int',
'gift_package_for_row_id' => 'int',
'position' => 'int',
'size' => 'string',
'shipping_profile_id' => 'int',
'referrer_id' => 'BigDecimal',
'delivery_date' => 'string',
'category_id' => 'int',
'reservation_datetime' => 'int',
'variation_id' => 'int',
'bundle_variation_id' => 'int',
'created_at' => 'string',
'updated_at' => 'string',
'attribute_total_markup' => 'BigDecimal',
'basket_item_order_params' => 'object[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'basket_id' => null,
'session_id' => null,
'order_row_id' => null,
'quantity' => null,
'quantity_originally' => null,
'item_id' => null,
'price_id' => null,
'attribute_value_set_id' => null,
'rebate' => null,
'vat' => null,
'price' => null,
'given_price' => null,
'use_given_price' => null,
'input_width' => null,
'input_length' => null,
'input_height' => null,
'item_type' => null,
'external_item_id' => null,
'no_edit_by_customer' => null,
'cost_center_id' => null,
'gift_package_for_row_id' => null,
'position' => null,
'size' => null,
'shipping_profile_id' => null,
'referrer_id' => null,
'delivery_date' => null,
'category_id' => null,
'reservation_datetime' => null,
'variation_id' => null,
'bundle_variation_id' => null,
'created_at' => null,
'updated_at' => null,
'attribute_total_markup' => null,
'basket_item_order_params' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'basket_id' => 'basketId',
'session_id' => 'sessionId',
'order_row_id' => 'orderRowId',
'quantity' => 'quantity',
'quantity_originally' => 'quantityOriginally',
'item_id' => 'itemId',
'price_id' => 'priceId',
'attribute_value_set_id' => 'attributeValueSetId',
'rebate' => 'rebate',
'vat' => 'vat',
'price' => 'price',
'given_price' => 'givenPrice',
'use_given_price' => 'useGivenPrice',
'input_width' => 'inputWidth',
'input_length' => 'inputLength',
'input_height' => 'inputHeight',
'item_type' => 'itemType',
'external_item_id' => 'externalItemId',
'no_edit_by_customer' => 'noEditByCustomer',
'cost_center_id' => 'costCenterId',
'gift_package_for_row_id' => 'giftPackageForRowId',
'position' => 'position',
'size' => 'size',
'shipping_profile_id' => 'shippingProfileId',
'referrer_id' => 'referrerId',
'delivery_date' => 'deliveryDate',
'category_id' => 'categoryId',
'reservation_datetime' => 'reservationDatetime',
'variation_id' => 'variationId',
'bundle_variation_id' => 'bundleVariationId',
'created_at' => 'createdAt',
'updated_at' => 'updatedAt',
'attribute_total_markup' => 'attributeTotalMarkup',
'basket_item_order_params' => 'basketItemOrderParams'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'basket_id' => 'setBasketId',
'session_id' => 'setSessionId',
'order_row_id' => 'setOrderRowId',
'quantity' => 'setQuantity',
'quantity_originally' => 'setQuantityOriginally',
'item_id' => 'setItemId',
'price_id' => 'setPriceId',
'attribute_value_set_id' => 'setAttributeValueSetId',
'rebate' => 'setRebate',
'vat' => 'setVat',
'price' => 'setPrice',
'given_price' => 'setGivenPrice',
'use_given_price' => 'setUseGivenPrice',
'input_width' => 'setInputWidth',
'input_length' => 'setInputLength',
'input_height' => 'setInputHeight',
'item_type' => 'setItemType',
'external_item_id' => 'setExternalItemId',
'no_edit_by_customer' => 'setNoEditByCustomer',
'cost_center_id' => 'setCostCenterId',
'gift_package_for_row_id' => 'setGiftPackageForRowId',
'position' => 'setPosition',
'size' => 'setSize',
'shipping_profile_id' => 'setShippingProfileId',
'referrer_id' => 'setReferrerId',
'delivery_date' => 'setDeliveryDate',
'category_id' => 'setCategoryId',
'reservation_datetime' => 'setReservationDatetime',
'variation_id' => 'setVariationId',
'bundle_variation_id' => 'setBundleVariationId',
'created_at' => 'setCreatedAt',
'updated_at' => 'setUpdatedAt',
'attribute_total_markup' => 'setAttributeTotalMarkup',
'basket_item_order_params' => 'setBasketItemOrderParams'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'basket_id' => 'getBasketId',
'session_id' => 'getSessionId',
'order_row_id' => 'getOrderRowId',
'quantity' => 'getQuantity',
'quantity_originally' => 'getQuantityOriginally',
'item_id' => 'getItemId',
'price_id' => 'getPriceId',
'attribute_value_set_id' => 'getAttributeValueSetId',
'rebate' => 'getRebate',
'vat' => 'getVat',
'price' => 'getPrice',
'given_price' => 'getGivenPrice',
'use_given_price' => 'getUseGivenPrice',
'input_width' => 'getInputWidth',
'input_length' => 'getInputLength',
'input_height' => 'getInputHeight',
'item_type' => 'getItemType',
'external_item_id' => 'getExternalItemId',
'no_edit_by_customer' => 'getNoEditByCustomer',
'cost_center_id' => 'getCostCenterId',
'gift_package_for_row_id' => 'getGiftPackageForRowId',
'position' => 'getPosition',
'size' => 'getSize',
'shipping_profile_id' => 'getShippingProfileId',
'referrer_id' => 'getReferrerId',
'delivery_date' => 'getDeliveryDate',
'category_id' => 'getCategoryId',
'reservation_datetime' => 'getReservationDatetime',
'variation_id' => 'getVariationId',
'bundle_variation_id' => 'getBundleVariationId',
'created_at' => 'getCreatedAt',
'updated_at' => 'getUpdatedAt',
'attribute_total_markup' => 'getAttributeTotalMarkup',
'basket_item_order_params' => 'getBasketItemOrderParams'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['basket_id'] = isset($data['basket_id']) ? $data['basket_id'] : null;
        $this->container['session_id'] = isset($data['session_id']) ? $data['session_id'] : null;
        $this->container['order_row_id'] = isset($data['order_row_id']) ? $data['order_row_id'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['quantity_originally'] = isset($data['quantity_originally']) ? $data['quantity_originally'] : null;
        $this->container['item_id'] = isset($data['item_id']) ? $data['item_id'] : null;
        $this->container['price_id'] = isset($data['price_id']) ? $data['price_id'] : null;
        $this->container['attribute_value_set_id'] = isset($data['attribute_value_set_id']) ? $data['attribute_value_set_id'] : null;
        $this->container['rebate'] = isset($data['rebate']) ? $data['rebate'] : null;
        $this->container['vat'] = isset($data['vat']) ? $data['vat'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['given_price'] = isset($data['given_price']) ? $data['given_price'] : null;
        $this->container['use_given_price'] = isset($data['use_given_price']) ? $data['use_given_price'] : null;
        $this->container['input_width'] = isset($data['input_width']) ? $data['input_width'] : null;
        $this->container['input_length'] = isset($data['input_length']) ? $data['input_length'] : null;
        $this->container['input_height'] = isset($data['input_height']) ? $data['input_height'] : null;
        $this->container['item_type'] = isset($data['item_type']) ? $data['item_type'] : null;
        $this->container['external_item_id'] = isset($data['external_item_id']) ? $data['external_item_id'] : null;
        $this->container['no_edit_by_customer'] = isset($data['no_edit_by_customer']) ? $data['no_edit_by_customer'] : null;
        $this->container['cost_center_id'] = isset($data['cost_center_id']) ? $data['cost_center_id'] : null;
        $this->container['gift_package_for_row_id'] = isset($data['gift_package_for_row_id']) ? $data['gift_package_for_row_id'] : null;
        $this->container['position'] = isset($data['position']) ? $data['position'] : null;
        $this->container['size'] = isset($data['size']) ? $data['size'] : null;
        $this->container['shipping_profile_id'] = isset($data['shipping_profile_id']) ? $data['shipping_profile_id'] : null;
        $this->container['referrer_id'] = isset($data['referrer_id']) ? $data['referrer_id'] : null;
        $this->container['delivery_date'] = isset($data['delivery_date']) ? $data['delivery_date'] : null;
        $this->container['category_id'] = isset($data['category_id']) ? $data['category_id'] : null;
        $this->container['reservation_datetime'] = isset($data['reservation_datetime']) ? $data['reservation_datetime'] : null;
        $this->container['variation_id'] = isset($data['variation_id']) ? $data['variation_id'] : null;
        $this->container['bundle_variation_id'] = isset($data['bundle_variation_id']) ? $data['bundle_variation_id'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['attribute_total_markup'] = isset($data['attribute_total_markup']) ? $data['attribute_total_markup'] : null;
        $this->container['basket_item_order_params'] = isset($data['basket_item_order_params']) ? $data['basket_item_order_params'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id The ID of the item in the shopping cart
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets basket_id
     *
     * @return int
     */
    public function getBasketId()
    {
        return $this->container['basket_id'];
    }

    /**
     * Sets basket_id
     *
     * @param int $basket_id The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart.
     *
     * @return $this
     */
    public function setBasketId($basket_id)
    {
        $this->container['basket_id'] = $basket_id;

        return $this;
    }

    /**
     * Gets session_id
     *
     * @return string
     */
    public function getSessionId()
    {
        return $this->container['session_id'];
    }

    /**
     * Sets session_id
     *
     * @param string $session_id The ID of the current customer session
     *
     * @return $this
     */
    public function setSessionId($session_id)
    {
        $this->container['session_id'] = $session_id;

        return $this;
    }

    /**
     * Gets order_row_id
     *
     * @return int
     */
    public function getOrderRowId()
    {
        return $this->container['order_row_id'];
    }

    /**
     * Sets order_row_id
     *
     * @param int $order_row_id order_row_id
     *
     * @return $this
     */
    public function setOrderRowId($order_row_id)
    {
        $this->container['order_row_id'] = $order_row_id;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return BigDecimal
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param BigDecimal $quantity The current quantity of the item
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets quantity_originally
     *
     * @return BigDecimal
     */
    public function getQuantityOriginally()
    {
        return $this->container['quantity_originally'];
    }

    /**
     * Sets quantity_originally
     *
     * @param BigDecimal $quantity_originally The initial quantity of the item
     *
     * @return $this
     */
    public function setQuantityOriginally($quantity_originally)
    {
        $this->container['quantity_originally'] = $quantity_originally;

        return $this;
    }

    /**
     * Gets item_id
     *
     * @return int
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     *
     * @param int $item_id The ID of the item
     *
     * @return $this
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets price_id
     *
     * @return int
     */
    public function getPriceId()
    {
        return $this->container['price_id'];
    }

    /**
     * Sets price_id
     *
     * @param int $price_id The ID of the item price
     *
     * @return $this
     */
    public function setPriceId($price_id)
    {
        $this->container['price_id'] = $price_id;

        return $this;
    }

    /**
     * Gets attribute_value_set_id
     *
     * @return int
     */
    public function getAttributeValueSetId()
    {
        return $this->container['attribute_value_set_id'];
    }

    /**
     * Sets attribute_value_set_id
     *
     * @param int $attribute_value_set_id The ID of the attribute value set
     *
     * @return $this
     */
    public function setAttributeValueSetId($attribute_value_set_id)
    {
        $this->container['attribute_value_set_id'] = $attribute_value_set_id;

        return $this;
    }

    /**
     * Gets rebate
     *
     * @return int
     */
    public function getRebate()
    {
        return $this->container['rebate'];
    }

    /**
     * Sets rebate
     *
     * @param int $rebate The discount on the item
     *
     * @return $this
     */
    public function setRebate($rebate)
    {
        $this->container['rebate'] = $rebate;

        return $this;
    }

    /**
     * Gets vat
     *
     * @return BigDecimal
     */
    public function getVat()
    {
        return $this->container['vat'];
    }

    /**
     * Sets vat
     *
     * @param BigDecimal $vat The VAT
     *
     * @return $this
     */
    public function setVat($vat)
    {
        $this->container['vat'] = $vat;

        return $this;
    }

    /**
     * Gets price
     *
     * @return BigDecimal
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param BigDecimal $price The item price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets given_price
     *
     * @return BigDecimal
     */
    public function getGivenPrice()
    {
        return $this->container['given_price'];
    }

    /**
     * Sets given_price
     *
     * @param BigDecimal $given_price given_price
     *
     * @return $this
     */
    public function setGivenPrice($given_price)
    {
        $this->container['given_price'] = $given_price;

        return $this;
    }

    /**
     * Gets use_given_price
     *
     * @return bool
     */
    public function getUseGivenPrice()
    {
        return $this->container['use_given_price'];
    }

    /**
     * Sets use_given_price
     *
     * @param bool $use_given_price use_given_price
     *
     * @return $this
     */
    public function setUseGivenPrice($use_given_price)
    {
        $this->container['use_given_price'] = $use_given_price;

        return $this;
    }

    /**
     * Gets input_width
     *
     * @return int
     */
    public function getInputWidth()
    {
        return $this->container['input_width'];
    }

    /**
     * Sets input_width
     *
     * @param int $input_width The width of the item
     *
     * @return $this
     */
    public function setInputWidth($input_width)
    {
        $this->container['input_width'] = $input_width;

        return $this;
    }

    /**
     * Gets input_length
     *
     * @return int
     */
    public function getInputLength()
    {
        return $this->container['input_length'];
    }

    /**
     * Sets input_length
     *
     * @param int $input_length The length of the item
     *
     * @return $this
     */
    public function setInputLength($input_length)
    {
        $this->container['input_length'] = $input_length;

        return $this;
    }

    /**
     * Gets input_height
     *
     * @return int
     */
    public function getInputHeight()
    {
        return $this->container['input_height'];
    }

    /**
     * Sets input_height
     *
     * @param int $input_height The height of the item
     *
     * @return $this
     */
    public function setInputHeight($input_height)
    {
        $this->container['input_height'] = $input_height;

        return $this;
    }

    /**
     * Gets item_type
     *
     * @return int
     */
    public function getItemType()
    {
        return $this->container['item_type'];
    }

    /**
     * Sets item_type
     *
     * @param int $item_type The item type
     *
     * @return $this
     */
    public function setItemType($item_type)
    {
        $this->container['item_type'] = $item_type;

        return $this;
    }

    /**
     * Gets external_item_id
     *
     * @return string
     */
    public function getExternalItemId()
    {
        return $this->container['external_item_id'];
    }

    /**
     * Sets external_item_id
     *
     * @param string $external_item_id The external variation ID
     *
     * @return $this
     */
    public function setExternalItemId($external_item_id)
    {
        $this->container['external_item_id'] = $external_item_id;

        return $this;
    }

    /**
     * Gets no_edit_by_customer
     *
     * @return bool
     */
    public function getNoEditByCustomer()
    {
        return $this->container['no_edit_by_customer'];
    }

    /**
     * Sets no_edit_by_customer
     *
     * @param bool $no_edit_by_customer Shows whether the item was edited by the customer
     *
     * @return $this
     */
    public function setNoEditByCustomer($no_edit_by_customer)
    {
        $this->container['no_edit_by_customer'] = $no_edit_by_customer;

        return $this;
    }

    /**
     * Gets cost_center_id
     *
     * @return int
     */
    public function getCostCenterId()
    {
        return $this->container['cost_center_id'];
    }

    /**
     * Sets cost_center_id
     *
     * @param int $cost_center_id cost_center_id
     *
     * @return $this
     */
    public function setCostCenterId($cost_center_id)
    {
        $this->container['cost_center_id'] = $cost_center_id;

        return $this;
    }

    /**
     * Gets gift_package_for_row_id
     *
     * @return int
     */
    public function getGiftPackageForRowId()
    {
        return $this->container['gift_package_for_row_id'];
    }

    /**
     * Sets gift_package_for_row_id
     *
     * @param int $gift_package_for_row_id gift_package_for_row_id
     *
     * @return $this
     */
    public function setGiftPackageForRowId($gift_package_for_row_id)
    {
        $this->container['gift_package_for_row_id'] = $gift_package_for_row_id;

        return $this;
    }

    /**
     * Gets position
     *
     * @return int
     */
    public function getPosition()
    {
        return $this->container['position'];
    }

    /**
     * Sets position
     *
     * @param int $position The item position
     *
     * @return $this
     */
    public function setPosition($position)
    {
        $this->container['position'] = $position;

        return $this;
    }

    /**
     * Gets size
     *
     * @return string
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param string $size The item size
     *
     * @return $this
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets shipping_profile_id
     *
     * @return int
     */
    public function getShippingProfileId()
    {
        return $this->container['shipping_profile_id'];
    }

    /**
     * Sets shipping_profile_id
     *
     * @param int $shipping_profile_id The ID of the shipping profile
     *
     * @return $this
     */
    public function setShippingProfileId($shipping_profile_id)
    {
        $this->container['shipping_profile_id'] = $shipping_profile_id;

        return $this;
    }

    /**
     * Gets referrer_id
     *
     * @return BigDecimal
     */
    public function getReferrerId()
    {
        return $this->container['referrer_id'];
    }

    /**
     * Sets referrer_id
     *
     * @param BigDecimal $referrer_id The ID of the order referrer
     *
     * @return $this
     */
    public function setReferrerId($referrer_id)
    {
        $this->container['referrer_id'] = $referrer_id;

        return $this;
    }

    /**
     * Gets delivery_date
     *
     * @return string
     */
    public function getDeliveryDate()
    {
        return $this->container['delivery_date'];
    }

    /**
     * Sets delivery_date
     *
     * @param string $delivery_date The delivery date
     *
     * @return $this
     */
    public function setDeliveryDate($delivery_date)
    {
        $this->container['delivery_date'] = $delivery_date;

        return $this;
    }

    /**
     * Gets category_id
     *
     * @return int
     */
    public function getCategoryId()
    {
        return $this->container['category_id'];
    }

    /**
     * Sets category_id
     *
     * @param int $category_id The ID of the item category
     *
     * @return $this
     */
    public function setCategoryId($category_id)
    {
        $this->container['category_id'] = $category_id;

        return $this;
    }

    /**
     * Gets reservation_datetime
     *
     * @return int
     */
    public function getReservationDatetime()
    {
        return $this->container['reservation_datetime'];
    }

    /**
     * Sets reservation_datetime
     *
     * @param int $reservation_datetime reservation_datetime
     *
     * @return $this
     */
    public function setReservationDatetime($reservation_datetime)
    {
        $this->container['reservation_datetime'] = $reservation_datetime;

        return $this;
    }

    /**
     * Gets variation_id
     *
     * @return int
     */
    public function getVariationId()
    {
        return $this->container['variation_id'];
    }

    /**
     * Sets variation_id
     *
     * @param int $variation_id The ID of the item variation
     *
     * @return $this
     */
    public function setVariationId($variation_id)
    {
        $this->container['variation_id'] = $variation_id;

        return $this;
    }

    /**
     * Gets bundle_variation_id
     *
     * @return int
     */
    public function getBundleVariationId()
    {
        return $this->container['bundle_variation_id'];
    }

    /**
     * Sets bundle_variation_id
     *
     * @param int $bundle_variation_id The ID of the item bundle type
     *
     * @return $this
     */
    public function setBundleVariationId($bundle_variation_id)
    {
        $this->container['bundle_variation_id'] = $bundle_variation_id;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at The date that the shopping cart was created
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at The date that the shopping cart was updated last
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets attribute_total_markup
     *
     * @return BigDecimal
     */
    public function getAttributeTotalMarkup()
    {
        return $this->container['attribute_total_markup'];
    }

    /**
     * Sets attribute_total_markup
     *
     * @param BigDecimal $attribute_total_markup attribute total markup
     *
     * @return $this
     */
    public function setAttributeTotalMarkup($attribute_total_markup)
    {
        $this->container['attribute_total_markup'] = $attribute_total_markup;

        return $this;
    }

    /**
     * Gets basket_item_order_params
     *
     * @return object[]
     */
    public function getBasketItemOrderParams()
    {
        return $this->container['basket_item_order_params'];
    }

    /**
     * Sets basket_item_order_params
     *
     * @param object[] $basket_item_order_params Array of BasketItemParams
     *
     * @return $this
     */
    public function setBasketItemOrderParams($basket_item_order_params)
    {
        $this->container['basket_item_order_params'] = $basket_item_order_params;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
